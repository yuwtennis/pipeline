#cloud-config

packages:
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - jq
package_update: true

disk_setup:
  /dev/sdb:
    table_type: mbr
    layout: [100]
    overwrite: true
fs_setup:
- filesystem: ext4
  device: /dev/sdb
  partition: auto
mounts:
- ["/dev/sdb1", "/data"]

runcmd:
  - set -x
  - |
    # Set environment variables
    export ELASTIC_VERSION=$(cloud-init query ds.meta_data.instance_data | jq -r '."elastic-version"')
  - |
    # Preparing os
    mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt update && apt -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
    echo "vm.max_map_count=262144" >> /etc/sysctl.conf && sysctl -p
    echo '{"data-root": "/data"}' > /etc/docker/daemon.json
    systemctl restart docker
  - |
    # Preparing container
    docker pull docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    docker network create local
    docker volume create es-data
    docker run -d --name elasticsearch --net local -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" -e "ELASTIC_PASSWORD=elastic" --mount source=es-data,target=/usr/share/elasticsearch/data elasticsearch:$ELASTIC_VERSION